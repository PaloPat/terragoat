# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '955df816-fac0-4cb3-a27e-b4746b4c2871'
  imageRepository: 'palopatterragoat'
  containerRegistry: 'palopatregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/terraform/aws/resources/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    
  - job: Prisma_Cloud_Job
    displayName: Prisma Cloud Job
- task: UsePythonVersion@0
    inputs:
    versionSpec: '3.8'
    displayName: 'Install Python 3.8'
  - script: pip install checkov
    displayName: 'Install Checkov'
  - script: checkov -d . --bc-api-key dd516dc8-59b4-412a-92ab-7766dbb033b0::BXtATEBSqCGMOfJGhzz9Va5ZLPA= --repo-id hacksawduggan/PaloPatADO branch master -o cli -o junitxml --output-file-path console,CheckovReport.xml
    workingDirectory: $(System.DefaultWorkingDirectory)
  displayName: 'Scan with Prisma Cloud'
  env:
    PRISMA_API_URL: https://api4.prismacloud.io
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/CheckovReport.xml'
      testRunTitle: PrismaCloudTests
    displayName: Publish Test Results
    condition: always()
